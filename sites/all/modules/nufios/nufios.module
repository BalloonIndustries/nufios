<?php

function computed_field_field_volume_percentage_compute(&$entity_field, $entity_type, $entity, $field, $instance, $langcode, $items) {
  $entity_field[0]['value'] = 0;
  if (is_numeric($entity->volume) && is_numeric($entity->avg_daily_volume) || $entity->volume != 0 || $entity->avg_daily_volume != 0) {
    $entity_field[0]['value'] = round($entity->volume / $entity->avg_daily_volume, 10);
  }
}

/*
 * Normalizes data from YAHOO!, intended to resolve typos, etc. Conditions are added as they pop up.
 */

function nufios_stockinfo_save_alter(&$stock) {

  // replace with regular expressions soonish
  if (strpos($stock['name'], "Corporati") !== false) {
    substr_replace($stock['name'], "Corporation", " ", 9);
  }
  if (strpos($stock['name'], "Corporatio") !== false) {
    substr_replace($stock['name'], "Corporation", " ", 10);
  }
  if (strpos($stock['name'], "Acqu") !== false) {
    substr_replace($stock['name'], "Acquistion", " ", 4);
  }
  if (strpos($stock['name'], "Intersta") !== false) {
    substr_replace($stock['name'], "Interstate", " ", 7);
  }
  if (strpos($stock['name'], "Banco") !== false) {
    substr_replace($stock['name'], "", " ", 5);
  }
  if (strpos($stock['name'], "Financial Man") !== false) {
    substr_replace($stock['name'], "Financial Management", " ", 13);
  }
  $stock['name'] = rtrim($stock['name'], ",");
  $stock['name'] = rtrim($stock['name'], ", I");
  $stock['name'] = ucfirst($stock['name']);
  $stock['name'] = str_replace("VelocityShares Da", "VelocityShares Data", $stock['name']);
  $stock['name'] = str_replace("Vanguard Long-Te", "Vanguard Long-Term", $stock['name']);
  $stock['name'] = str_replace("Vanguard Short-Te", "Vanguard Short-Term", $stock['name']);
  $stock['name'] = str_replace("VASCO Data Securi", "VASCO Data Security", $stock['name']);
  $stock['name'] = str_replace("Vanguard Intermed", "Vanguard Intermediate", $stock['name']);
  $stock['name'] = str_replace("Video Display Cor", "Video Display Corporation", $stock['name']);
  $stock['name'] = str_replace("Vident Internatio", "Vident International", $stock['name']);
  $stock['name'] = str_replace("Vical Incorpate", "Vical Incorporated", $stock['name']);
  $stock['name'] = str_replace("Vimicro Internati", "Vimicro International", $stock['name']);
  $stock['name'] = str_replace("Vicro Manufacturi", "Vicro Manufacturing", $stock['name']);
  $stock['name'] = str_replace("Meridian Bioscien", "Meridian Bioscience", $stock['name']);
  $stock['name'] = str_replace("Knightsbridge Shi", "Knightsbridge Shipping", $stock['name']);
  $stock['name'] = str_replace("Village Super Mar", "Village Super Market", $stock['name']);
  $stock['name'] = str_replace("Knightsbridge Shi", "Knightsbridge Shipping", $stock['name']);
  $stock['name'] = str_replace("Valley National B", "Valley National Bank", $stock['name']);
  $stock['name'] = str_replace("Vanda Pharmaceuti", "Vanda Pharmaceutical", $stock['name']);
  $stock['name'] = str_replace("Voltari Corporati", "Voltari Corporation", $stock['name']);
  $stock['name'] = str_replace("Vanguard Global e", "Vanguard Global Equity Fund", $stock['name']);
  $stock['name'] = str_replace("Vanguard Natural", "Vanguard Natural Resources", $stock['name']);
  $stock['name'] = str_replace("Gulf Resources, I", "Gulf Resources", $stock['name']);
  $stock['name'] = str_replace("HopFed Bancorp, I", "HopFed Bancorp", $stock['name']);
  $stock['name'] = str_replace("HF2 Financial Man", "HF2 Financial Management", $stock['name']);
}

/**
 * Implement hook_rules_action_info().
 */
function nufios_rules_action_info() {
  return array(
    'nufios_rules_action_pull_stock_property' => array(
      'label' => t('Pull Stock Property Value'),
      'group' => t('Nufios'),
      'parameter' => array(
        'symbol' => array(
          'type' => 'text',
          'label' => t('Symbol'),
          'description' => t('Stock symbol to collect data from.'),
        ),
      ),
      'provides' => array(
        'stock_property' => array(
          'type' => 'text',
          'label' => t('Stock Property Type'),
        ),
        'stock_property_value' => array(
          'type' => 'text',
          'label' => t('Stock Property Value'),
        ),
      ),
    ),
  );
}

function nufios_pull_stock_property_recursive($symbol, $stockinfo_keys, $label_array, $count = 0) {
  $key = '';
  $while_array = array(
    "sid",
    "symbol",
    "name",
    "url",
    "updated",
    "exchange",
    "chg_and_pct_chg",
    "field_volume_percentage",
    "last_trade_date",
    "last_trade_with_time",
    "last_trade_price_only",
    "price_paid",
    "open",
    "pct_chg",
    'last_trade_with_time',
    'last_trade_price_only',
    'last_trade_date',
    'last_trade_time',
    'notes',
    'last_trade_rt',
    'bid_rt',
    'ask_rt',
    'pct_chg_rt',
    'chg_rt',
    'holdings_value_rt',
    'days_value_chg_rt',
    'holdings_gain_pct_rt',
    'holdings_gain_rt',
    'days_range_rt',
    'market_cap_rt',
    'pe_rt',
    'after_hours_change_rt',
    'order_book_rt');
  do {
    $numeric_key = array_rand($stockinfo_keys, 1);
    $key = $stockinfo_keys[$numeric_key];
  } while (in_array($key, $while_array));

  // db_query was not working here, switch to db_query in the future if possible
  $property = db_select("stockinfo", "si")
          ->fields("si", array($key))
          ->condition("symbol", $symbol, "=")
          ->execute()->fetchField();
  if (empty($property) || $property == "-0") {
    $count = $count + 1;
    if ($count > 30) {
      watchdog("Recursion Problem", "Too many instances of recursion are occuring. Please take a look.");
    }
    $property_info = nufios_pull_stock_property_recursive($symbol, $stockinfo_keys, $count);
    return $property_info;
  }
  else {
    $machine_name = variable_get('stockinfo_field_machine_name');
    $machine_key = array_search($key, $machine_name);
    $final_key = $label_array[$machine_key];
    if ($property > 1000000000) {
      $property = $property / 1000000000;
      $property = number_format($property);
      $property = (string) $property . "B";
    }
    elseif ($property > 1000000) {
      $property = $property / 1000000;
      $property = number_format($property);
      $property = (string) $property . "M";
    }
    elseif($property > 1000) {
      $property = number_format($property);
    }
    $property_info = array("stock_property" => $final_key, "stock_property_value" => (string) $property);
    return $property_info;
  }
}

function nufios_rules_action_pull_stock_property($symbol) {
  $label_array = array(
    'k3' => 'Last Size',
    'c0' => 'Change And Percent Change',
    'c1' => 'Change',
    'p2' => 'Percent Change',
    'v0' => 'Volume',
    'a2' => 'Average Daily Volume',
    'b0' => 'Bid',
    'b6' => 'Bid Size',
    'a0' => 'Ask',
    'a5' => 'Ask Size',
    'p0' => 'previous close',
    'o0' => 'open',
    'm0' => 'Day\'s Range',
    'w0' => '52 Week Range',
    'j0' => 'Change 52 Week Low',
    'j6' => 'Percent Change 52 Week Low',
    'k0' => 'Change 52 Week High',
    'k5' => 'Percent Change 52 Week High',
    'e0' => 'EPS',
    'r0' => 'PE Ratio',
    's7' => 'Short Ratio',
    'r1' => 'Dividend Pay Date',
    'q0' => 'Ex Dividend Date',
    'd0' => 'Dividend Yield',
    'f6' => 'Float Shares',
    'j1' => 'Market Cap',
    't8' => 'One Year Target Price',
    'e7' => 'EPS Est Current Year',
    'e8' => 'EPS Est Next Year',
    'e9' => 'EPS Est Next Quarter',
    'r6' => 'Price Per EPS Estimate - Current Year',
    'r7' => 'Price Per EPS Estimate -  Next Year',
    'r5' => 'PEG Ratio',
    'b4' => 'Book Value',
    'p6' => 'Price Per Book',
    'p5' => 'Price Per Sales',
    'j4' => 'EBITDA',
    'm3' => '50 Day Moving Average',
    'm7' => 'Change from 50 Day Moving Average',
    'm8' => 'Percent Change from 50 Day Moving Average',
    'm4' => '200 Day Moving Average',
    'm5' => 'Change from 200 Day Moving Average',
    'm6' => 'Percent Change from 200 Day Moving Average',
    's1' => 'Shares Owned',
    'p1' => 'Price Paid',
    'c3' => 'Commission',
    'v1' => 'Holdings Value',
    'w1' => 'Day\'s Value Change',
    'g1' => 'Holdings Gain Percent',
    'g4' => 'Holdings Gain',
    'd2' => 'Trade Date',
    'g3' => 'Annualized Gain',
    'l2' => 'Highlimit',
    'l3' => 'Lowlimit',
  );
  $stockinfo_info = entity_get_all_property_info("stockinfo");
  $stockinfo_keys = array_keys($stockinfo_info);
  $property = nufios_pull_stock_property_recursive($symbol, $stockinfo_keys, $label_array, 0);
  return $property;
}
