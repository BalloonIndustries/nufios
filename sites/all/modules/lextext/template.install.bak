<?php

/**
 * @file
 * Contains the schema, install, and uninstall functions for Content Generator.
 */
/*
 * Implements hook_schema().
 */
function template_schema() {
  $schema['template'] = array(
    'description' => 'Table for content generator templates',
    'fields' => array(
      'label' => array(
        'description' => 'Human readable name of the template',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => ''),
      'type' => array(
        'description' => 'The entity type',
        'type' => 'varchar',
        'length' => 75,
        'not null' => TRUE,
        'default' => ''),
      'tid' => array(
        'description' => 'Template ID Number',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE),
    ),
    'primary key' => array('tid'),
    'unique key' => array('type' => 'type', 'tid' => 'tid'),
  );
  
  $schema['template_type'] = array(
    'description' => 'Stores information about all defined template types.',
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Primary Key: Unique template type ID.',
      ),
      'type' => array(
        'description' => 'The machine-readable name of this template type.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
      ),
      'label' => array(
        'description' => 'The human-readable name of this template type.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'status' => array(
        'type' => 'int',
        'not null' => TRUE,
        // Set the default to ENTITY_CUSTOM without using the constant as it is
        // not safe to use it at this point.
        'default' => 0x01,
        'size' => 'tiny',
        'description' => 'The exportable status of the entity.',
      ),
      'module' => array(
        'description' => 'The name of the providing module if the entity has been defined in code.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('id'),
    'unique keys' => array(
      'type' => array('type'),
    ),
  );

  return $schema;
}
