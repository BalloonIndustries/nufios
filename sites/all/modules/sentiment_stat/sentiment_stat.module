<?php

/**
 * @file calculates statistics
 */

function sentiment_stat_menu() {
      $items['admin/config/services/stat'] = array(
    'title' => 'Sentiment Stat Test',
    'description' => t('Test stat generation'),
    'page callback' => array('sentiment_stat_calculate'),
    'access arguments' => array('administer site configuration'),
  );
        return $items;
}

/**
 * Keeps values for calculation.
 */
function sentiment_stat_values() {
    $tables = array(
        'sentiment_analyzer' => array(
            'elated',
        ),
    );
    return $tables;
}

/**
 * 
 */

function sentiment_stat_calculate() {
      db_delete("{sentiment_stats}")
      ->execute();
    $tables = sentiment_stat_values();
    foreach ($tables as $table => $fields) {
        foreach($fields as $field) {
    $mean_init = 0;
    $sa = db_select($table, "tb")
    ->fields("tb", array($field, "date"))
    ->execute()
    ->fetchAll();
    foreach($sa as $number) {
        $mean_init = $mean_init + $number->$field;
    }
    $mean = $mean_init / count($sa);
    watchdog("sa", "<pre>" . print_r($sa, true) . "</pre>");
    watchdog("mean", "<pre>" . print_r($mean, true) . "</pre>");
    $variance_init = 0;
    foreach($sa as $number) {
        $variance_init = $variance_init + pow(($number->$field - $mean), 2);
    }
    $variance = $variance_init / count($sa);
    watchdog("variance", "<pre>" . print_r($variance, true) . "</pre>");
    $std = sqrt($variance);
    watchdog("std", "<pre>" . print_r($std, true) . "</pre>");
    $zscore_array = array();
    foreach($sa as $number) {
        $zscore = ($number->$field - $mean) / $std;
        $zscore_array[] = $zscore
        db_insert("sentiment_stats")
        ->fields(
                array(
                    // Change field to some combo of field at some point soon
                    "type" => $field,
                    "category" => "feeling",
                    "mean" => $mean,
                    "std" => $std,
                    "variance" => $variance,
                    "zscore" => $zscore,
                    "date" => $number->date,
                    ),
                )->execute;
    }
    watchdog("zscore", "<pre>" . print_r($zscore_array, true) . "</pre>");
    }
    }
}